# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  working_directory: ~/repo

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      - image: circleci/mysql:5.7.20
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: myseries

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
    #   - run: mvn integration-test

      - store_test_results:
          path: target/surefire-reports

      - run: mvn package -Dmaven.test.skip=true

      - run: ls -al ~/repo/target/

      - store_artifacts:
          path: ~/repo/target/myseries-0.0.1-SNAPSHOT.jar
          destination: myseries-0.0.1-SNAPSHOT.jar

      - persist_to_workspace:
          root: ~/repo
          paths:
            - target/*.jar
  docker:
    <<: *defaults
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build image
          command: |
            cd ~/repo
            docker build . -f /home/circle-ci/repo/docker/Dockerfile -t clement26695/myseries_back
      - run:
          name: Build image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push clement26695/myseries_back

  deploy:
    <<: *defaults
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy Over SSH
          command: |
            scp ~/repo/target/*.jar $SSH_USER@$SSH_HOST:~/back

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - docker:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
          context: SSH-keys
